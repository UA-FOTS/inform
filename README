########################
# THE INFORM TOOLCHAIN #
########################

The inform toolchain allows formal verification of compartmental model. The toolchain is the first step to a uniform framework for analyzing epidemics. Compartmental models are given in a graph based format, using the cms (compartmental model specifications) fromat.

# BUILDING AND RUNNING INFORM #

Inform is the translation tool for compartmental models in the cms format to stochastic counter machines in the prism (.pm) format. Then model checkers like storm and modest can be used to verify the desired properties. Note that modest does not support prism files yet, and storm-conv has to be used to convert prism files to jani files. 

Inform was written in Rust and can easily be built using the cargo package manager. Simply go the to directory containing inform and use the command "cargo build" to build the application. The executable can then be found in ./inform/target/debug/.

To run inform, use the -h flag to display all options. Use the -i filename1 flag to give cms file as input, and use the -p filename2 flag to translate the input to the prism format and save it in filename2. The use of the -l flag is higly advised. This will ensure that inform will translate any binomial distributions with compartmental dependencies using the full encoding. Otherwise, the model is not compatible to be translated to jani. 

# THE CMS FORMAT #

The CMS format is simple textual file format for encoding compartmental models. 
Each CMS file is divided into two sections: the meta-section, and the trans(itions)-section. In the meta section, starting with the "-meta-", all meta info is placed, such as the population size, number of compartments. In the trans section, starting with "-trans-", all transitions are defined. The format for a transition is as follows.

	src dst [prob1 dependency1] [prob2 dependency2] ...

Here, src is the id of source compartment. If there are 3 compartments, the ids are 0, 1, or 2. Dst is the id of the destination state. This is followed by a list of probabilities with their dependency. If there is no dependency then the only probability in the list will be [p _] with p in [0, 1]. If the list is [p1 0] [p2 1], then the success-rate is p1^|0|*p2^|1|. 
